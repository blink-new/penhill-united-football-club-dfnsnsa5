import { useState, useEffect } from 'react'
import { motion, AnimatePresence } from 'framer-motion'
import { 
  User, Calendar, MessageSquare, Camera, Download,
  Bell, Heart, TrendingUp, Clock, MapPin, Star,
  Phone, Mail, AlertTriangle, CheckCircle, Info,
  Eye, Share2, Filter, Search, Plus, MoreHorizontal,
  Award, Target, Activity, Zap, Users, Trophy
} from 'lucide-react'
import { Card, CardContent, CardHeader, CardTitle } from './ui/card'
import { Button } from './ui/button'
import { Badge } from './ui/badge'
import { Progress } from './ui/progress'
import { Tabs, TabsContent, TabsList, TabsTrigger } from './ui/tabs'
import { Avatar, AvatarFallback, AvatarImage } from './ui/avatar'
import { Input } from './ui/input'
import { Textarea } from './ui/textarea'
import { 
  Dialog,
  DialogContent,
  DialogDescription,
  DialogHeader,
  DialogTitle,
  DialogTrigger,
} from './ui/dialog'
import { 
  DropdownMenu,
  DropdownMenuContent,
  DropdownMenuItem,
  DropdownMenuTrigger,
} from './ui/dropdown-menu'
import { 
  ConfidenceRing, 
  SparkLine,
  LiveIndicator
} from './icons/SkyIcons'

interface PlayerChild {
  id: string
  name: string
  age: number
  position: string
  avatar?: string
  teamName: string
  jerseyNumber: number
  joinDate: string
  status: 'active' | 'injured' | 'suspended'
}

interface ProgressReport {
  id: string
  date: string
  period: string
  overallRating: number
  improvements: {
    technical: number
    tactical: number
    physical: number
    psychological: number
  }
  strengths: string[]
  areasForImprovement: string[]
  coachComments: string
  nextGoals: string[]
  attendanceRate: number
}

interface UpcomingEvent {
  id: string
  type: 'match' | 'training' | 'meeting' | 'tournament'
  title: string
  date: string
  time: string
  location: string
  description: string
  requiresResponse: boolean
  transportNeeded?: boolean
}

interface Communication {
  id: string
  from: string
  fromRole: 'coach' | 'manager' | 'parent' | 'admin'
  subject: string
  message: string
  date: string
  priority: 'low' | 'medium' | 'high'
  read: boolean
  attachments?: string[]
}

interface MediaItem {
  id: string
  type: 'photo' | 'video'
  title: string
  date: string
  event: string
  thumbnail: string
  url: string
  featured: boolean
}

export function ParentPortal() {
  const [selectedChild, setSelectedChild] = useState<PlayerChild | null>(null)
  const [selectedTab, setSelectedTab] = useState('overview')
  const [notifications, setNotifications] = useState(3)
  const [newMessage, setNewMessage] = useState('')

  // Mock data
  const children: PlayerChild[] = [
    {
      id: '1',
      name: 'Jamie Smith',
      age: 16,
      position: 'Midfielder',
      teamName: 'U16 Elite',
      jerseyNumber: 10,
      joinDate: '2023-09-01',
      status: 'active'
    }
  ]

  const progressReport: ProgressReport = {
    id: '1',
    date: '2025-07-15',
    period: 'July 2025',
    overallRating: 87,
    improvements: {
      technical: 12,
      tactical: 8,
      physical: 15,
      psychological: 10
    },
    strengths: ['Leadership qualities', 'Passing accuracy', 'Set piece delivery', 'Team communication'],
    areasForImprovement: ['Defensive positioning', 'Physical strength', 'Weak foot development'],
    coachComments: 'Jamie has shown exceptional progress this month, particularly in leadership and technical skills. Their passing accuracy has improved significantly, and they\'re becoming a key player in our tactical setup. We\'re working on defensive positioning and physical development for next season.',
    nextGoals: ['Improve weak foot passing accuracy to 80%', 'Master advanced set piece techniques', 'Develop captain leadership skills'],
    attendanceRate: 95
  }\n\n  const upcomingEvents: UpcomingEvent[] = [\n    {\n      id: '1',\n      type: 'match',\n      title: 'vs Arsenal FC Youth',\n      date: '2025-07-20',\n      time: '15:00',\n      location: 'Penhill Stadium',\n      description: 'Important league match - please arrive 45 minutes early',\n      requiresResponse: true,\n      transportNeeded: false\n    },\n    {\n      id: '2',\n      type: 'training',\n      title: 'Technical Skills Session',\n      date: '2025-07-22',\n      time: '18:30',\n      location: 'Training Ground A',\n      description: 'Focus on passing and ball control',\n      requiresResponse: false\n    },\n    {\n      id: '3',\n      type: 'meeting',\n      title: 'Parent-Coach Meeting',\n      date: '2025-07-25',\n      time: '19:00',\n      location: 'Club House',\n      description: 'Monthly progress review and season planning',\n      requiresResponse: true\n    }\n  ]\n\n  const communications: Communication[] = [\n    {\n      id: '1',\n      from: 'Coach Michael Johnson',\n      fromRole: 'coach',\n      subject: 'Excellent Performance vs Chelsea',\n      message: 'Jamie played exceptionally well in yesterday\\'s match. Their leadership on the field was outstanding, and the winning goal was a perfect example of their improved finishing. Keep up the great work!',\n      date: '2025-07-16',\n      priority: 'medium',\n      read: false\n    },\n    {\n      id: '2',\n      from: 'Club Administrator',\n      fromRole: 'admin',\n      subject: 'Tournament Registration Open',\n      message: 'Registration is now open for the Summer Championship. Please confirm Jamie\\'s participation by July 25th. Tournament fee is Â£45.',\n      date: '2025-07-15',\n      priority: 'high',\n      read: true\n    },\n    {\n      id: '3',\n      from: 'Team Manager Sarah Wilson',\n      fromRole: 'manager',\n      subject: 'Training Schedule Update',\n      message: 'Due to pitch maintenance, Tuesday\\'s training has been moved to the indoor facility. Same time, different location.',\n      date: '2025-07-14',\n      priority: 'medium',\n      read: true\n    }\n  ]\n\n  const mediaItems: MediaItem[] = [\n    {\n      id: '1',\n      type: 'photo',\n      title: 'Goal Celebration vs Chelsea',\n      date: '2025-07-15',\n      event: 'League Match',\n      thumbnail: 'https://images.unsplash.com/photo-1574629810360-7efbbe195018?w=300&h=200&fit=crop',\n      url: 'https://images.unsplash.com/photo-1574629810360-7efbbe195018?w=800&h=600&fit=crop',\n      featured: true\n    },\n    {\n      id: '2',\n      type: 'video',\n      title: 'Training Highlights',\n      date: '2025-07-12',\n      event: 'Technical Training',\n      thumbnail: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=300&h=200&fit=crop',\n      url: 'https://images.unsplash.com/photo-1571019613454-1cb2f99b2d8b?w=800&h=600&fit=crop',\n      featured: false\n    },\n    {\n      id: '3',\n      type: 'photo',\n      title: 'Team Photo',\n      date: '2025-07-10',\n      event: 'Season Start',\n      thumbnail: 'https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=300&h=200&fit=crop',\n      url: 'https://images.unsplash.com/photo-1551698618-1dfe5d97d256?w=800&h=600&fit=crop',\n      featured: false\n    }\n  ]\n\n  const quickStats = {\n    matchesPlayed: 15,\n    goals: 8,\n    assists: 12,\n    attendanceRate: 95,\n    averageRating: 8.7\n  }\n\n  useEffect(() => {\n    if (children.length > 0) {\n      setSelectedChild(children[0])\n    }\n  }, [])\n\n  const getEventIcon = (type: UpcomingEvent['type']) => {\n    switch (type) {\n      case 'match': return Trophy\n      case 'training': return Target\n      case 'meeting': return Users\n      case 'tournament': return Award\n      default: return Calendar\n    }\n  }\n\n  const getPriorityColor = (priority: Communication['priority']) => {\n    switch (priority) {\n      case 'high': return 'border-red-500 bg-red-50'\n      case 'medium': return 'border-yellow-500 bg-yellow-50'\n      case 'low': return 'border-green-500 bg-green-50'\n      default: return 'border-gray-500 bg-gray-50'\n    }\n  }\n\n  const getStatusColor = (status: PlayerChild['status']) => {\n    switch (status) {\n      case 'active': return 'bg-green-100 text-green-800'\n      case 'injured': return 'bg-red-100 text-red-800'\n      case 'suspended': return 'bg-yellow-100 text-yellow-800'\n      default: return 'bg-gray-100 text-gray-800'\n    }\n  }\n\n  return (\n    <div className=\"min-h-screen bg-gradient-to-br from-slate-50 via-blue-50/30 to-purple-50/30 neural-pattern pt-24 pb-8\">\n      <div className=\"max-w-7xl mx-auto px-4 sm:px-6 lg:px-8\">\n        \n        {/* Header */}\n        <motion.div\n          initial={{ opacity: 0, y: 20 }}\n          animate={{ opacity: 1, y: 0 }}\n          className=\"mb-8\"\n        >\n          <div className=\"flex items-center justify-between mb-4\">\n            <div>\n              <h1 className=\"text-3xl md:text-4xl font-bold text-display\">\n                <span className=\"stat-gradient\">Parent Portal</span>\n              </h1>\n              <p className=\"text-muted-foreground\">\n                Stay connected with your child's football journey\n              </p>\n            </div>\n            <div className=\"flex items-center space-x-4\">\n              <Button variant=\"outline\" size=\"icon\" className=\"relative\">\n                <Bell className=\"w-4 h-4\" />\n                {notifications > 0 && (\n                  <Badge className=\"absolute -top-1 -right-1 w-5 h-5 p-0 flex items-center justify-center bg-red-500 text-white text-xs\">\n                    {notifications}\n                  </Badge>\n                )}\n              </Button>\n              <Button className=\"sky-gradient text-white\">\n                <MessageSquare className=\"w-4 h-4 mr-2\" />\n                Contact Coach\n              </Button>\n            </div>\n          </div>\n        </motion.div>\n\n        {/* Child Selector */}\n        {children.length > 1 && (\n          <motion.div\n            initial={{ opacity: 0, y: 20 }}\n            animate={{ opacity: 1, y: 0 }}\n            transition={{ delay: 0.1 }}\n            className=\"mb-6\"\n          >\n            <Card className=\"glass-card\">\n              <CardContent className=\"p-4\">\n                <div className=\"flex items-center space-x-4\">\n                  <span className=\"text-sm font-medium\">Select Child:</span>\n                  <div className=\"flex space-x-2\">\n                    {children.map((child) => (\n                      <Button\n                        key={child.id}\n                        variant={selectedChild?.id === child.id ? \"default\" : \"outline\"}\n                        size=\"sm\"\n                        onClick={() => setSelectedChild(child)}\n                      >\n                        {child.name}\n                      </Button>\n                    ))}\n                  </div>\n                </div>\n              </CardContent>\n            </Card>\n          </motion.div>\n        )}\n\n        {selectedChild && (\n          <>\n            {/* Player Overview Card */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.2 }}\n              className=\"mb-8\"\n            >\n              <Card className=\"glass-card\">\n                <CardContent className=\"p-6\">\n                  <div className=\"flex items-center space-x-6\">\n                    <Avatar className=\"w-20 h-20\">\n                      <AvatarImage src={selectedChild.avatar} />\n                      <AvatarFallback className=\"bg-primary text-primary-foreground text-xl\">\n                        {selectedChild.name.split(' ').map(n => n[0]).join('')}\n                      </AvatarFallback>\n                    </Avatar>\n                    \n                    <div className=\"flex-1\">\n                      <div className=\"flex items-center space-x-3 mb-2\">\n                        <h2 className=\"text-2xl font-bold\">{selectedChild.name}</h2>\n                        <Badge className={getStatusColor(selectedChild.status)}>\n                          {selectedChild.status.charAt(0).toUpperCase() + selectedChild.status.slice(1)}\n                        </Badge>\n                      </div>\n                      \n                      <div className=\"grid grid-cols-2 md:grid-cols-4 gap-4 text-sm\">\n                        <div>\n                          <span className=\"text-muted-foreground\">Position:</span>\n                          <div className=\"font-medium\">{selectedChild.position}</div>\n                        </div>\n                        <div>\n                          <span className=\"text-muted-foreground\">Team:</span>\n                          <div className=\"font-medium\">{selectedChild.teamName}</div>\n                        </div>\n                        <div>\n                          <span className=\"text-muted-foreground\">Jersey:</span>\n                          <div className=\"font-medium\">#{selectedChild.jerseyNumber}</div>\n                        </div>\n                        <div>\n                          <span className=\"text-muted-foreground\">Age:</span>\n                          <div className=\"font-medium\">{selectedChild.age} years</div>\n                        </div>\n                      </div>\n                    </div>\n                    \n                    <div className=\"text-center\">\n                      <ConfidenceRing confidence={progressReport.overallRating} size={80} />\n                      <div className=\"mt-2 text-sm text-muted-foreground\">Overall Rating</div>\n                    </div>\n                  </div>\n                </CardContent>\n              </Card>\n            </motion.div>\n\n            {/* Quick Stats */}\n            <motion.div\n              initial={{ opacity: 0, y: 20 }}\n              animate={{ opacity: 1, y: 0 }}\n              transition={{ delay: 0.3 }}\n              className=\"mb-8\"\n            >\n              <div className=\"grid grid-cols-2 md:grid-cols-5 gap-4\">\n                {Object.entries(quickStats).map(([key, value], index) => (\n                  <motion.div\n                    key={key}\n                    initial={{ opacity: 0, scale: 0.9 }}\n                    animate={{ opacity: 1, scale: 1 }}\n                    transition={{ delay: index * 0.1 }}\n                  >\n                    <Card className=\"glass-card text-center\">\n                      <CardContent className=\"p-4\">\n                        <div className=\"text-2xl font-bold stat-gradient\">\n                          {typeof value === 'number' && key.includes('Rate') ? `${value}%` : value}\n                        </div>\n                        <div className=\"text-xs text-muted-foreground capitalize\">\n                          {key.replace(/([A-Z])/g, ' $1').toLowerCase()}\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </motion.div>\n                ))}\n              </div>\n            </motion.div>\n\n            {/* Main Content Tabs */}\n            <Tabs value={selectedTab} onValueChange={setSelectedTab}>\n              <TabsList className=\"grid w-full grid-cols-5 mb-8\">\n                <TabsTrigger value=\"overview\">Overview</TabsTrigger>\n                <TabsTrigger value=\"progress\">Progress</TabsTrigger>\n                <TabsTrigger value=\"schedule\">Schedule</TabsTrigger>\n                <TabsTrigger value=\"messages\">Messages</TabsTrigger>\n                <TabsTrigger value=\"media\">Media</TabsTrigger>\n              </TabsList>\n\n              <TabsContent value=\"overview\" className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-2 gap-6\">\n                  \n                  {/* Upcoming Events */}\n                  <Card className=\"glass-card\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <Calendar className=\"w-5 h-5 text-accent\" />\n                        <span>Upcoming Events</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-3\">\n                      {upcomingEvents.slice(0, 3).map((event, index) => {\n                        const EventIcon = getEventIcon(event.type)\n                        return (\n                          <motion.div\n                            key={event.id}\n                            initial={{ opacity: 0, x: -20 }}\n                            animate={{ opacity: 1, x: 0 }}\n                            transition={{ delay: index * 0.1 }}\n                            className=\"flex items-center space-x-3 p-3 rounded-lg bg-muted/30\"\n                          >\n                            <div className=\"w-10 h-10 bg-accent/10 rounded-lg flex items-center justify-center\">\n                              <EventIcon className=\"w-5 h-5 text-accent\" />\n                            </div>\n                            <div className=\"flex-1\">\n                              <h4 className=\"font-medium\">{event.title}</h4>\n                              <div className=\"flex items-center space-x-4 text-sm text-muted-foreground\">\n                                <span>{new Date(event.date).toLocaleDateString()}</span>\n                                <span>{event.time}</span>\n                                <span>{event.location}</span>\n                              </div>\n                            </div>\n                            {event.requiresResponse && (\n                              <Badge variant=\"outline\" className=\"text-xs\">\n                                Response Required\n                              </Badge>\n                            )}\n                          </motion.div>\n                        )\n                      })}\n                    </CardContent>\n                  </Card>\n\n                  {/* Recent Communications */}\n                  <Card className=\"glass-card\">\n                    <CardHeader>\n                      <CardTitle className=\"flex items-center space-x-2\">\n                        <MessageSquare className=\"w-5 h-5 text-accent\" />\n                        <span>Recent Messages</span>\n                      </CardTitle>\n                    </CardHeader>\n                    <CardContent className=\"space-y-3\">\n                      {communications.slice(0, 3).map((comm, index) => (\n                        <motion.div\n                          key={comm.id}\n                          initial={{ opacity: 0, x: -20 }}\n                          animate={{ opacity: 1, x: 0 }}\n                          transition={{ delay: index * 0.1 }}\n                          className={`p-3 rounded-lg border-l-4 ${getPriorityColor(comm.priority)} ${!comm.read ? 'font-medium' : ''}`}\n                        >\n                          <div className=\"flex items-start justify-between mb-1\">\n                            <h4 className=\"text-sm font-medium\">{comm.subject}</h4>\n                            {!comm.read && (\n                              <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\n                            )}\n                          </div>\n                          <p className=\"text-xs text-muted-foreground mb-2\">\n                            From: {comm.from} â¢ {new Date(comm.date).toLocaleDateString()}\n                          </p>\n                          <p className=\"text-sm line-clamp-2\">{comm.message}</p>\n                        </motion.div>\n                      ))}\n                    </CardContent>\n                  </Card>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"progress\" className=\"space-y-6\">\n                <Card className=\"glass-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <TrendingUp className=\"w-5 h-5 text-accent\" />\n                      <span>Monthly Progress Report - {progressReport.period}</span>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-6\">\n                    \n                    {/* Four Corners Progress */}\n                    <div>\n                      <h4 className=\"font-semibold mb-4\">Development Areas</h4>\n                      <div className=\"grid grid-cols-2 gap-4\">\n                        {Object.entries(progressReport.improvements).map(([key, value]) => (\n                          <div key={key} className=\"space-y-2\">\n                            <div className=\"flex justify-between\">\n                              <span className=\"capitalize text-sm font-medium\">{key}</span>\n                              <span className=\"text-sm text-green-600 font-medium\">+{value}%</span>\n                            </div>\n                            <Progress value={70 + value} className=\"h-2\" />\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n\n                    {/* Strengths & Areas for Improvement */}\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 gap-6\">\n                      <div>\n                        <h4 className=\"font-semibold mb-3 flex items-center\">\n                          <CheckCircle className=\"w-5 h-5 text-green-500 mr-2\" />\n                          Strengths\n                        </h4>\n                        <div className=\"space-y-2\">\n                          {progressReport.strengths.map((strength, index) => (\n                            <div key={index} className=\"flex items-center space-x-2\">\n                              <Star className=\"w-4 h-4 text-yellow-500\" />\n                              <span className=\"text-sm\">{strength}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                      \n                      <div>\n                        <h4 className=\"font-semibold mb-3 flex items-center\">\n                          <Target className=\"w-5 h-5 text-orange-500 mr-2\" />\n                          Areas for Improvement\n                        </h4>\n                        <div className=\"space-y-2\">\n                          {progressReport.areasForImprovement.map((area, index) => (\n                            <div key={index} className=\"flex items-center space-x-2\">\n                              <TrendingUp className=\"w-4 h-4 text-orange-500\" />\n                              <span className=\"text-sm\">{area}</span>\n                            </div>\n                          ))}\n                        </div>\n                      </div>\n                    </div>\n\n                    {/* Coach Comments */}\n                    <div>\n                      <h4 className=\"font-semibold mb-3\">Coach Comments</h4>\n                      <div className=\"p-4 bg-muted/30 rounded-lg\">\n                        <p className=\"text-sm leading-relaxed\">{progressReport.coachComments}</p>\n                      </div>\n                    </div>\n\n                    {/* Next Goals */}\n                    <div>\n                      <h4 className=\"font-semibold mb-3\">Next Month's Goals</h4>\n                      <div className=\"space-y-2\">\n                        {progressReport.nextGoals.map((goal, index) => (\n                          <div key={index} className=\"flex items-center space-x-2\">\n                            <div className=\"w-2 h-2 bg-accent rounded-full\" />\n                            <span className=\"text-sm\">{goal}</span>\n                          </div>\n                        ))}\n                      </div>\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"schedule\" className=\"space-y-6\">\n                <Card className=\"glass-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <Calendar className=\"w-5 h-5 text-accent\" />\n                      <span>Upcoming Schedule</span>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent className=\"space-y-4\">\n                    {upcomingEvents.map((event, index) => {\n                      const EventIcon = getEventIcon(event.type)\n                      return (\n                        <motion.div\n                          key={event.id}\n                          initial={{ opacity: 0, y: 20 }}\n                          animate={{ opacity: 1, y: 0 }}\n                          transition={{ delay: index * 0.1 }}\n                          className=\"p-4 rounded-lg border hover:shadow-md micro-transition\"\n                        >\n                          <div className=\"flex items-start space-x-4\">\n                            <div className=\"w-12 h-12 bg-accent/10 rounded-lg flex items-center justify-center\">\n                              <EventIcon className=\"w-6 h-6 text-accent\" />\n                            </div>\n                            <div className=\"flex-1\">\n                              <div className=\"flex items-center justify-between mb-2\">\n                                <h4 className=\"font-semibold\">{event.title}</h4>\n                                <Badge variant=\"outline\" className=\"capitalize\">\n                                  {event.type}\n                                </Badge>\n                              </div>\n                              <div className=\"grid grid-cols-2 gap-4 text-sm text-muted-foreground mb-3\">\n                                <div className=\"flex items-center space-x-1\">\n                                  <Calendar className=\"w-3 h-3\" />\n                                  <span>{new Date(event.date).toLocaleDateString()}</span>\n                                </div>\n                                <div className=\"flex items-center space-x-1\">\n                                  <Clock className=\"w-3 h-3\" />\n                                  <span>{event.time}</span>\n                                </div>\n                                <div className=\"flex items-center space-x-1\">\n                                  <MapPin className=\"w-3 h-3\" />\n                                  <span>{event.location}</span>\n                                </div>\n                                {event.transportNeeded !== undefined && (\n                                  <div className=\"flex items-center space-x-1\">\n                                    <Info className=\"w-3 h-3\" />\n                                    <span>{event.transportNeeded ? 'Transport needed' : 'Own transport'}</span>\n                                  </div>\n                                )}\n                              </div>\n                              <p className=\"text-sm\">{event.description}</p>\n                              {event.requiresResponse && (\n                                <div className=\"mt-3 flex space-x-2\">\n                                  <Button size=\"sm\" className=\"sky-gradient text-white\">\n                                    <CheckCircle className=\"w-3 h-3 mr-1\" />\n                                    Confirm Attendance\n                                  </Button>\n                                  <Button size=\"sm\" variant=\"outline\">\n                                    Can't Attend\n                                  </Button>\n                                </div>\n                              )}\n                            </div>\n                          </div>\n                        </motion.div>\n                      )\n                    })}\n                  </CardContent>\n                </Card>\n              </TabsContent>\n\n              <TabsContent value=\"messages\" className=\"space-y-6\">\n                <div className=\"grid grid-cols-1 lg:grid-cols-3 gap-6\">\n                  \n                  {/* Messages List */}\n                  <div className=\"lg:col-span-2\">\n                    <Card className=\"glass-card\">\n                      <CardHeader>\n                        <CardTitle className=\"flex items-center justify-between\">\n                          <span>Communications</span>\n                          <Button size=\"sm\" className=\"sky-gradient text-white\">\n                            <Plus className=\"w-4 h-4 mr-1\" />\n                            New Message\n                          </Button>\n                        </CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-3\">\n                        {communications.map((comm, index) => (\n                          <motion.div\n                            key={comm.id}\n                            initial={{ opacity: 0, y: 20 }}\n                            animate={{ opacity: 1, y: 0 }}\n                            transition={{ delay: index * 0.1 }}\n                            className={`p-4 rounded-lg border-l-4 cursor-pointer hover:shadow-md micro-transition ${\n                              getPriorityColor(comm.priority)\n                            } ${!comm.read ? 'bg-blue-50/50' : ''}`}\n                          >\n                            <div className=\"flex items-start justify-between mb-2\">\n                              <div className=\"flex items-center space-x-2\">\n                                <h4 className=\"font-medium\">{comm.subject}</h4>\n                                {!comm.read && (\n                                  <div className=\"w-2 h-2 bg-blue-500 rounded-full\" />\n                                )}\n                              </div>\n                              <Badge variant=\"outline\" className=\"text-xs capitalize\">\n                                {comm.priority}\n                              </Badge>\n                            </div>\n                            <p className=\"text-sm text-muted-foreground mb-2\">\n                              From: {comm.from} â¢ {new Date(comm.date).toLocaleDateString()}\n                            </p>\n                            <p className=\"text-sm line-clamp-3\">{comm.message}</p>\n                            {comm.attachments && comm.attachments.length > 0 && (\n                              <div className=\"mt-2 flex items-center space-x-1 text-xs text-muted-foreground\">\n                                <Download className=\"w-3 h-3\" />\n                                <span>{comm.attachments.length} attachment(s)</span>\n                              </div>\n                            )}\n                          </motion.div>\n                        ))}\n                      </CardContent>\n                    </Card>\n                  </div>\n\n                  {/* Quick Contact */}\n                  <div>\n                    <Card className=\"glass-card\">\n                      <CardHeader>\n                        <CardTitle>Quick Contact</CardTitle>\n                      </CardHeader>\n                      <CardContent className=\"space-y-4\">\n                        <div className=\"space-y-3\">\n                          <Button className=\"w-full justify-start\" variant=\"outline\">\n                            <Phone className=\"w-4 h-4 mr-2\" />\n                            Call Coach\n                          </Button>\n                          <Button className=\"w-full justify-start\" variant=\"outline\">\n                            <Mail className=\"w-4 h-4 mr-2\" />\n                            Email Manager\n                          </Button>\n                          <Button className=\"w-full justify-start\" variant=\"outline\">\n                            <MessageSquare className=\"w-4 h-4 mr-2\" />\n                            Team Chat\n                          </Button>\n                        </div>\n                        \n                        <div className=\"pt-4 border-t\">\n                          <h4 className=\"font-medium mb-3\">Send Quick Message</h4>\n                          <Textarea\n                            placeholder=\"Type your message...\"\n                            value={newMessage}\n                            onChange={(e) => setNewMessage(e.target.value)}\n                            className=\"mb-3\"\n                          />\n                          <Button className=\"w-full sky-gradient text-white\">\n                            Send Message\n                          </Button>\n                        </div>\n                      </CardContent>\n                    </Card>\n                  </div>\n                </div>\n              </TabsContent>\n\n              <TabsContent value=\"media\" className=\"space-y-6\">\n                <Card className=\"glass-card\">\n                  <CardHeader>\n                    <CardTitle className=\"flex items-center space-x-2\">\n                      <Camera className=\"w-5 h-5 text-accent\" />\n                      <span>Photos & Videos</span>\n                    </CardTitle>\n                  </CardHeader>\n                  <CardContent>\n                    <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-4\">\n                      {mediaItems.map((item, index) => (\n                        <motion.div\n                          key={item.id}\n                          initial={{ opacity: 0, scale: 0.9 }}\n                          animate={{ opacity: 1, scale: 1 }}\n                          transition={{ delay: index * 0.1 }}\n                          className=\"relative group cursor-pointer\"\n                        >\n                          <div className=\"aspect-video rounded-lg overflow-hidden\">\n                            <img\n                              src={item.thumbnail}\n                              alt={item.title}\n                              className=\"w-full h-full object-cover group-hover:scale-105 transition-transform duration-300\"\n                            />\n                            {item.type === 'video' && (\n                              <div className=\"absolute inset-0 flex items-center justify-center\">\n                                <div className=\"w-12 h-12 bg-black/50 rounded-full flex items-center justify-center\">\n                                  <Play className=\"w-6 h-6 text-white ml-1\" />\n                                </div>\n                              </div>\n                            )}\n                            {item.featured && (\n                              <Badge className=\"absolute top-2 left-2 bg-yellow-500 text-white\">\n                                <Star className=\"w-3 h-3 mr-1\" />\n                                Featured\n                              </Badge>\n                            )}\n                          </div>\n                          <div className=\"mt-2\">\n                            <h4 className=\"font-medium text-sm\">{item.title}</h4>\n                            <p className=\"text-xs text-muted-foreground\">\n                              {item.event} â¢ {new Date(item.date).toLocaleDateString()}\n                            </p>\n                          </div>\n                          <div className=\"absolute top-2 right-2 opacity-0 group-hover:opacity-100 transition-opacity\">\n                            <DropdownMenu>\n                              <DropdownMenuTrigger asChild>\n                                <Button size=\"icon\" variant=\"secondary\" className=\"w-8 h-8\">\n                                  <MoreHorizontal className=\"w-4 h-4\" />\n                                </Button>\n                              </DropdownMenuTrigger>\n                              <DropdownMenuContent>\n                                <DropdownMenuItem>\n                                  <Eye className=\"w-4 h-4 mr-2\" />\n                                  View Full Size\n                                </DropdownMenuItem>\n                                <DropdownMenuItem>\n                                  <Download className=\"w-4 h-4 mr-2\" />\n                                  Download\n                                </DropdownMenuItem>\n                                <DropdownMenuItem>\n                                  <Share2 className=\"w-4 h-4 mr-2\" />\n                                  Share\n                                </DropdownMenuItem>\n                              </DropdownMenuContent>\n                            </DropdownMenu>\n                          </div>\n                        </motion.div>\n                      ))}\n                    </div>\n                  </CardContent>\n                </Card>\n              </TabsContent>\n            </Tabs>\n          </>\n        )}\n      </div>\n    </div>\n  )\n}